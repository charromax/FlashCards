name: Android Release

on:
  push:
    branches:
      - release
  workflow_dispatch:

jobs:
  build:
    if: "!startsWith(github.ref, 'refs/tags/')"
    name: Build & Sign AAB
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Auto-increment versionCode & versionPatch
        env:
          GH_PAT: ${{ secrets.TOKEN }}
        run: |
          versionCode=$(grep versionCode versions.properties | cut -d'=' -f2)
          versionMajor=$(grep versionMajor versions.properties | cut -d'=' -f2)
          versionMinor=$(grep versionMinor versions.properties | cut -d'=' -f2)
          versionPatch=$(grep versionPatch versions.properties | cut -d'=' -f2)

          newVersionCode=$((versionCode + 1))
          newVersionPatch=$((versionPatch + 1))

          # 🚀 Incrementar versionCode y versionPatch en versions.properties
          sed -i "s/versionCode=[0-9]\+/versionCode=$newVersionCode/" versions.properties
          sed -i "s/versionPatch=[0-9]\+/versionPatch=$newVersionPatch/" versions.properties

          newVersionTag="v$versionMajor.$versionMinor.$newVersionPatch"

          # 🔎 Verificación para asegurarse de que newVersionTag no esté vacío
          if [[ -z "$newVersionTag" ]]; then
            echo "❌ Error: No se generó un tag válido"
            exit 1
          fi

          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git remote set-url origin https://x-access-token:${{ secrets.TOKEN }}@github.com/charromax/FlashCards.git

          git commit -am "🔄 Bump versionCode to $newVersionCode & versionPatch to $newVersionPatch"

          # 🚀 Crear y subir el tag correctamente
          git tag -fa "$newVersionTag" -m "🚀 Release $newVersionTag"
          git push origin "$newVersionTag"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
         tag_name: "v${{ env.versionMajor }}.${{ env.versionMinor }}.${{ env.versionPatch }}"
         name: "Release v${{ env.versionMajor }}.${{ env.versionMinor }}.${{ env.versionPatch }}"
         draft: false
         prerelease: false
         files: app/build/outputs/bundle/release/app-release.aab
        env:
           GITHUB_TOKEN: ${{ secrets.TOKEN }}

      - name: Decode Keystore
        run: echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > keystore.jks

      - name: Inject Gemini API Key
        run: echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> secrets.properties

      - name: Build AAB
        run: ./gradlew bundleRelease

      - name: Sign AAB
        run: |
          jarsigner -verbose \
            -keystore keystore.jks \
            -storepass "${{ secrets.KEYSTORE_PASSWORD }}" \
            -keypass "${{ secrets.KEY_ALIAS_PASSWORD }}" \
            -signedjar app-release.aab \
            app/build/outputs/bundle/release/app-release.aab \
            "${{ secrets.KEY_ALIAS }}"

      - name: Upload Signed AAB
        uses: actions/upload-artifact@v4
        with:
          name: app-release-signed
          path: app/build/outputs/bundle/release/app-release.aab